{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-05-05T19:22:13.566Z",
    "end": "2021-05-05T19:23:35.863Z",
    "duration": 82297,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "330bb379-d5b4-4e4e-942e-b6d7d73ee33c",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1d820b5a-48a3-4e83-9833-afbaaacc9a62",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 220,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "aff7aa5c-13b8-4d52-b629-c6c3412cc200",
              "parentUUID": "1d820b5a-48a3-4e83-9833-afbaaacc9a62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aff7aa5c-13b8-4d52-b629-c6c3412cc200"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 220,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "90a3489c-e3c8-415c-8b13-6aa48070c1fc",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "4a909bf3-78d3-49e7-b2a6-ba0582b6ac53",
              "parentUUID": "90a3489c-e3c8-415c-8b13-6aa48070c1fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "41f0aea8-0b15-4698-8023-67a5c8786615",
              "parentUUID": "90a3489c-e3c8-415c-8b13-6aa48070c1fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "b08bc8da-8dac-43b6-aa60-95d939422744",
              "parentUUID": "90a3489c-e3c8-415c-8b13-6aa48070c1fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "aef56419-11d7-4819-bce3-89b29d8e0081",
              "parentUUID": "90a3489c-e3c8-415c-8b13-6aa48070c1fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "e601e9f3-8547-4c8e-b6f3-603cb944ae37",
              "parentUUID": "90a3489c-e3c8-415c-8b13-6aa48070c1fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "317a62ba-29c7-4a7a-88d8-031ddb718329",
              "parentUUID": "90a3489c-e3c8-415c-8b13-6aa48070c1fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "8f686061-9a41-4aca-8546-566ef7fe69d2",
              "parentUUID": "90a3489c-e3c8-415c-8b13-6aa48070c1fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a909bf3-78d3-49e7-b2a6-ba0582b6ac53",
            "41f0aea8-0b15-4698-8023-67a5c8786615",
            "b08bc8da-8dac-43b6-aa60-95d939422744",
            "aef56419-11d7-4819-bce3-89b29d8e0081",
            "e601e9f3-8547-4c8e-b6f3-603cb944ae37",
            "317a62ba-29c7-4a7a-88d8-031ddb718329",
            "8f686061-9a41-4aca-8546-566ef7fe69d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1058,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "32f0d6b8-a646-4d66-838b-de779c034130",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "a7df373e-ade7-4935-bab7-f4ad2d1c57d3",
              "parentUUID": "32f0d6b8-a646-4d66-838b-de779c034130",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "b0afc167-debb-4baf-a2e4-6a8ea3bfd473",
              "parentUUID": "32f0d6b8-a646-4d66-838b-de779c034130",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7df373e-ade7-4935-bab7-f4ad2d1c57d3",
            "b0afc167-debb-4baf-a2e4-6a8ea3bfd473"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 316,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "111690c4-406f-47bb-8f36-27f18e23e3da",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "de278408-1b3c-45bc-952d-e03c0278c219",
              "parentUUID": "111690c4-406f-47bb-8f36-27f18e23e3da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "3a0f4be3-98cb-481a-823e-506919623802",
              "parentUUID": "111690c4-406f-47bb-8f36-27f18e23e3da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "5286b710-9ea1-44c8-bf1b-61c68ec307dd",
              "parentUUID": "111690c4-406f-47bb-8f36-27f18e23e3da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "da211134-03bf-4cf2-bd60-01154a82becb",
              "parentUUID": "111690c4-406f-47bb-8f36-27f18e23e3da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de278408-1b3c-45bc-952d-e03c0278c219",
            "3a0f4be3-98cb-481a-823e-506919623802",
            "5286b710-9ea1-44c8-bf1b-61c68ec307dd",
            "da211134-03bf-4cf2-bd60-01154a82becb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 588,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6034136a-2af1-4e06-a1e9-788a73684c38",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 370,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "dd702db9-b78a-4b27-b791-57bd9d19e3b6",
              "parentUUID": "6034136a-2af1-4e06-a1e9-788a73684c38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 316,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "87dae276-ebad-42fd-823f-1950a5ea8878",
              "parentUUID": "6034136a-2af1-4e06-a1e9-788a73684c38",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dd702db9-b78a-4b27-b791-57bd9d19e3b6",
            "87dae276-ebad-42fd-823f-1950a5ea8878"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 686,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "83c36a1c-81e8-4be9-9b0c-242f3f3d745b",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b573cbd2-3313-46c0-b241-d7026f910ad5",
              "parentUUID": "83c36a1c-81e8-4be9-9b0c-242f3f3d745b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "e0923a24-8428-4ee6-b004-a29e17cfe26a",
              "parentUUID": "83c36a1c-81e8-4be9-9b0c-242f3f3d745b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b573cbd2-3313-46c0-b241-d7026f910ad5",
            "e0923a24-8428-4ee6-b004-a29e17cfe26a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 204,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8812ba8f-e811-490c-8c8f-f6cd3e9bdfab",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "11e2ffe8-8ff5-42bf-9ed3-ab17c27c9277",
              "parentUUID": "8812ba8f-e811-490c-8c8f-f6cd3e9bdfab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8976,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "e284de51-4315-45f2-8089-d8472c3501ae",
              "parentUUID": "8812ba8f-e811-490c-8c8f-f6cd3e9bdfab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11e2ffe8-8ff5-42bf-9ed3-ab17c27c9277",
            "e284de51-4315-45f2-8089-d8472c3501ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9437,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d2d6a406-6f60-4e4d-90fa-b877949583fc",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2280,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "ad68ea32-0e91-4c56-8034-0610d894a9f3",
              "parentUUID": "d2d6a406-6f60-4e4d-90fa-b877949583fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8870,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "d226afb4-2634-484f-b09e-acc15a6f3d15",
              "parentUUID": "d2d6a406-6f60-4e4d-90fa-b877949583fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1825,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "067c4ba8-bac8-443d-8233-e73922f5338b",
              "parentUUID": "d2d6a406-6f60-4e4d-90fa-b877949583fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad68ea32-0e91-4c56-8034-0610d894a9f3",
            "d226afb4-2634-484f-b09e-acc15a6f3d15",
            "067c4ba8-bac8-443d-8233-e73922f5338b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12975,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3786f316-5563-4893-a284-c5a5f6c99eaf",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "40eca5c5-7c13-460c-9012-c32f9f5f85dd",
              "parentUUID": "3786f316-5563-4893-a284-c5a5f6c99eaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "caf9855c-242f-4af9-b465-7748fc43d6ad",
              "parentUUID": "3786f316-5563-4893-a284-c5a5f6c99eaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "22e4f67c-645d-4ce2-a110-33b64cd6faec",
              "parentUUID": "3786f316-5563-4893-a284-c5a5f6c99eaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2433,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "97b54c4c-df3a-4a55-b2c9-ebc95c0fff26",
              "parentUUID": "3786f316-5563-4893-a284-c5a5f6c99eaf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40eca5c5-7c13-460c-9012-c32f9f5f85dd",
            "caf9855c-242f-4af9-b465-7748fc43d6ad",
            "22e4f67c-645d-4ce2-a110-33b64cd6faec",
            "97b54c4c-df3a-4a55-b2c9-ebc95c0fff26"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2779,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c23a1cd1-1cab-4b0a-8462-67e77af4de10",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4373,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42647/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42647/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42647/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42647/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42647/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42647/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42647/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42647/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42647/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "be6a1c51-45fc-4d50-9145-b6dd16c4d3a5",
              "parentUUID": "c23a1cd1-1cab-4b0a-8462-67e77af4de10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4313,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42647/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42647/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42647/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42647/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42647/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42647/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42647/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42647/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42647/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dc33f122-e59a-48fe-ba99-3e2ff0af33a6",
              "parentUUID": "c23a1cd1-1cab-4b0a-8462-67e77af4de10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4344,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42647/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42647/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42647/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42647/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42647/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42647/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42647/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42647/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42647/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f120ea32-9660-4e74-b6b0-740bf91232c3",
              "parentUUID": "c23a1cd1-1cab-4b0a-8462-67e77af4de10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4293,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42647/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42647/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42647/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42647/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42647/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42647/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42647/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42647/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42647/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "13b43f02-5ef2-4cc2-b784-871685b9986b",
              "parentUUID": "c23a1cd1-1cab-4b0a-8462-67e77af4de10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4314,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42647/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42647/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42647/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42647/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42647/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42647/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42647/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42647/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42647/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6e6521a5-bd5e-4ba2-9927-d38e248c29d4",
              "parentUUID": "c23a1cd1-1cab-4b0a-8462-67e77af4de10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4292,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42647/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42647/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42647/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42647/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42647/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42647/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42647/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42647/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42647/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0e1f297d-95b4-4549-8012-d251abb5c0ce",
              "parentUUID": "c23a1cd1-1cab-4b0a-8462-67e77af4de10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4348,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42647/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42647/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42647/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42647/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42647/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42647/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42647/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42647/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42647/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d04b7028-f795-4dcf-9ce0-f2c4d7c82d9d",
              "parentUUID": "c23a1cd1-1cab-4b0a-8462-67e77af4de10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4325,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42647/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42647/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42647/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42647/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42647/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42647/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42647/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42647/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42647/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0137e779-4a7d-490c-b4ec-895e946a8c4b",
              "parentUUID": "c23a1cd1-1cab-4b0a-8462-67e77af4de10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4313,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42647/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42647/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42647/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42647/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42647/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42647/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42647/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42647/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42647/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "66bde8ba-9f81-4746-b0c3-fbdbe210584f",
              "parentUUID": "c23a1cd1-1cab-4b0a-8462-67e77af4de10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "be6a1c51-45fc-4d50-9145-b6dd16c4d3a5",
            "dc33f122-e59a-48fe-ba99-3e2ff0af33a6",
            "f120ea32-9660-4e74-b6b0-740bf91232c3",
            "13b43f02-5ef2-4cc2-b784-871685b9986b",
            "6e6521a5-bd5e-4ba2-9927-d38e248c29d4",
            "0e1f297d-95b4-4549-8012-d251abb5c0ce",
            "d04b7028-f795-4dcf-9ce0-f2c4d7c82d9d",
            "0137e779-4a7d-490c-b4ec-895e946a8c4b",
            "66bde8ba-9f81-4746-b0c3-fbdbe210584f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38915,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "554231cf-7674-4c94-91c9-7c6070e8f66b",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4331,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42647/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42647/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42647/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42647/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42647/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42647/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42647/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42647/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42647/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5230f82f-3619-46de-8dca-319440ff7504",
              "parentUUID": "554231cf-7674-4c94-91c9-7c6070e8f66b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4336,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42647/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42647/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42647/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42647/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42647/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42647/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42647/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42647/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42647/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cc4e0106-f0b6-4806-9df9-cf64544862be",
              "parentUUID": "554231cf-7674-4c94-91c9-7c6070e8f66b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4341,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42647/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42647/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42647/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42647/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42647/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42647/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42647/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42647/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42647/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42647/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42647/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d8eae13d-7978-46ba-b9bf-c7e3238bf29f",
              "parentUUID": "554231cf-7674-4c94-91c9-7c6070e8f66b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5230f82f-3619-46de-8dca-319440ff7504",
            "cc4e0106-f0b6-4806-9df9-cf64544862be",
            "d8eae13d-7978-46ba-b9bf-c7e3238bf29f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13008,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "017e7c03-d8f5-43b0-bac2-769d464449d0",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 520,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "9d381f66-470c-47e5-9337-e62ea54289b9",
              "parentUUID": "017e7c03-d8f5-43b0-bac2-769d464449d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 493,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "96074ca4-582a-4036-9593-c008160cc3ee",
              "parentUUID": "017e7c03-d8f5-43b0-bac2-769d464449d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d381f66-470c-47e5-9337-e62ea54289b9",
            "96074ca4-582a-4036-9593-c008160cc3ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1013,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}